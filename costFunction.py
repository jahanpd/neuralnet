import numpy as np
from sigmoid import sigmoid


def costFunction(X_trn, y_trn, Th1, Th2, Th3, Th4, Th5, ThOut, m_trn, n_trn):
    X_trn = np.insert(X_trn, [0], np.ones((m_trn, 1)), axis=1)
    a2 = np.dot(X_trn, Th1)
    a2 = sigmoid(a2)
    a2 = np.insert(a2, [0], np.ones((m_trn, 1)), axis=1)
    a3 = np.dot(a2, Th2)
    a3 = sigmoid(a3)
    a3 = np.insert(a3, [0], np.ones((m_trn, 1)), axis=1)
    a4 = np.dot(a3, Th3)
    a4 = sigmoid(a4)
    a4 = np.insert(a4, [0], np.ones((m_trn, 1)), axis=1)
    a5 = np.dot(a4, Th4)
    a5 = sigmoid(a5)
    a5 = np.insert(a5, [0], np.ones((m_trn, 1)), axis=1)
    a6 = np.dot(a5, Th5)
    a6 = sigmoid(a6)
    a6 = np.insert(a6, [0], np.ones((m_trn, 1)), axis=1)
    h0 = np.dot(a6, ThOut)
    #h0 = sigmoid(h0)
    #print(h0)
    #print(1-y_trn)
    Jpart1 = np.dot(y_trn, (np.log(h0).T))
    #print(Jpart1)
    Jpart2 = np.dot((1-y_trn), (np.log((1.000001-h0))).T)
    #print(Jpart2)
    J = Jpart1 + Jpart2
    J = np.sum(J)
    print(a2)
    print(a3)
    print(a4)
    print(a5)
    print(a6)
    print(ThOut)
    print(h0)
    
    print(np.ones((m_trn, 1)))
    print(J)
